import java.awt.Dimension;
import java.awt.event.ActionEvent;

public class Calculadora extends javax.swing.JFrame {

    private int base;
    private int basePrevia;
    private String operacion;
    private String valorPrevio;
    private String valorNuevo;

    public Calculadora() {
        super();
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        base = 10;
        basePrevia = 10;
        operacion = "";
        valorPrevio = "";
        valorNuevo = "";
        pantalla.setEditable(false);
        opBasicaActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        barraMenu = new javax.swing.JMenuBar();
        menuOpciones = new javax.swing.JMenu();
        menuSalir = new javax.swing.JMenu();
        opBasica = new javax.swing.JMenuItem();
        opProgramacion = new javax.swing.JMenuItem();
        opSalir = new javax.swing.JMenuItem();
        pantalla = new javax.swing.JTextField(20);
        grupoBases = new javax.swing.ButtonGroup();
        panelBases = new javax.swing.JPanel();
        panelTeclas = new javax.swing.JPanel();
        binario = new javax.swing.JRadioButton();
        octal = new javax.swing.JRadioButton();
        decimal = new javax.swing.JRadioButton();
        hexadecimal = new javax.swing.JRadioButton();
        boton0 = new javax.swing.JButton("0");
        boton1 = new javax.swing.JButton("1");
        boton2 = new javax.swing.JButton("2");
        boton3 = new javax.swing.JButton("3");
        boton4 = new javax.swing.JButton("4");
        boton5 = new javax.swing.JButton("5");
        boton6 = new javax.swing.JButton("6");
        boton7 = new javax.swing.JButton("7");
        boton8 = new javax.swing.JButton("8");
        boton9 = new javax.swing.JButton("9");
        botonA = new javax.swing.JButton("A");
        botonB = new javax.swing.JButton("B");
        botonC = new javax.swing.JButton("C");
        botonD = new javax.swing.JButton("D");
        botonE = new javax.swing.JButton("E");
        botonF = new javax.swing.JButton("F");
        botonSumar = new javax.swing.JButton("+");
        botonRestar = new javax.swing.JButton("-");
        botonMultiplicar = new javax.swing.JButton("x");
        botonDividir = new javax.swing.JButton("/");
        botonIgual = new javax.swing.JButton("=");
        botonDEL = new javax.swing.JButton("DEL");
        botonCON = new javax.swing.JButton("CON");
        botonPunto = new javax.swing.JButton(".");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuOpciones.setText("Opciones");
        opProgramacion.setText("Programacion");
        opProgramacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opProgramacionActionPerformed(evt);
            }
        });
        menuOpciones.add(opProgramacion);

        opBasica.setText("BÃ¡sica");
        opBasica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opBasicaActionPerformed(evt);
            }
        });
        menuOpciones.add(opBasica);

        barraMenu.add(menuOpciones);

        menuSalir.setText("Salir");
        opSalir.setText("Salir");
        opSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opSalirActionPerformed(evt);
            }
        });

        menuSalir.add(opSalir);
        barraMenu.add(menuSalir);
        setJMenuBar(barraMenu);

        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        java.awt.GridBagConstraints c = new java.awt.GridBagConstraints();
        setLayout(layout);

        c.fill = java.awt.GridBagConstraints.BOTH;
        c.anchor = java.awt.GridBagConstraints.PAGE_START;
        c.insets = new java.awt.Insets(5, 5, 5, 5);
        c.gridx = 0;
        c.gridy = 0;
        add(pantalla, c);

        binario.setText("Binario");
        binario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binarioActionPerformed(evt);
            }
        });
        octal.setText("Octal");
        octal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                octalActionPerformed(evt);
            }
        });
        decimal.setText("Decimal");
        decimal.setSelected(true);
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });
        hexadecimal.setText("Hexadecimal");
        hexadecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexadecimalActionPerformed(evt);
            }
        });

        grupoBases.add(binario);
        grupoBases.add(octal);
        grupoBases.add(decimal);
        grupoBases.add(hexadecimal);
        panelBases.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        panelBases.add(binario);
        panelBases.add(octal);
        panelBases.add(decimal);
        panelBases.add(hexadecimal);

        c.fill = java.awt.GridBagConstraints.BOTH;
        c.gridx = 0;
        c.gridy = 1;
        add(panelBases, c);

        panelTeclas.setLayout(new java.awt.GridLayout(4, 6, 5, 5));

        botonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAActionPerformed(evt);
            }
        });
        panelTeclas.add(botonA);

        botonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBActionPerformed(evt);
            }
        });
        panelTeclas.add(botonB);

        boton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton7ActionPerformed(evt);
            }
        });
        panelTeclas.add(boton7);

        boton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton8ActionPerformed(evt);
            }
        });
        panelTeclas.add(boton8);

        boton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton9ActionPerformed(evt);
            }
        });
        panelTeclas.add(boton9);

        botonDividir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDividirActionPerformed(evt);
            }
        });
        panelTeclas.add(botonDividir);

        botonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCActionPerformed(evt);
            }
        });
        panelTeclas.add(botonC);

        botonD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDActionPerformed(evt);
            }
        });
        panelTeclas.add(botonD);

        boton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton4ActionPerformed(evt);
            }
        });
        panelTeclas.add(boton4);

        boton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton5ActionPerformed(evt);
            }
        });
        panelTeclas.add(boton5);

        boton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton6ActionPerformed(evt);
            }
        });
        panelTeclas.add(boton6);

        botonMultiplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMultiplicarActionPerformed(evt);
            }
        });
        panelTeclas.add(botonMultiplicar);

        botonE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEActionPerformed(evt);
            }
        });
        panelTeclas.add(botonE);

        botonF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFActionPerformed(evt);
            }
        });
        panelTeclas.add(botonF);

        boton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton1ActionPerformed(evt);
            }
        });
        panelTeclas.add(boton1);

        boton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton2ActionPerformed(evt);
            }
        });
        panelTeclas.add(boton2);

        boton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton3ActionPerformed(evt);
            }
        });
        panelTeclas.add(boton3);

        botonRestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRestarActionPerformed(evt);
            }
        });
        panelTeclas.add(botonRestar);

        botonDEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDELActionPerformed(evt);
            }
        });
        panelTeclas.add(botonDEL);

        botonCON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCONActionPerformed(evt);
            }
        });
        panelTeclas.add(botonCON);

        botonPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPuntoActionPerformed(evt);
            }
        });
        panelTeclas.add(botonPunto);

        boton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton0ActionPerformed(evt);
            }
        });
        panelTeclas.add(boton0);

        botonIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIgualActionPerformed(evt);
            }
        });
        panelTeclas.add(botonIgual);

        botonSumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSumarActionPerformed(evt);
            }
        });
        panelTeclas.add(botonSumar);

        c.fill = java.awt.GridBagConstraints.BOTH;
        c.anchor = java.awt.GridBagConstraints.CENTER;
        c.gridx = 0;
        c.gridy = 3;
        add(panelTeclas, c);

        pack();

    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Configura para base hexadecimal.
     * 
     * @param evt
     */
    protected void hexadecimalActionPerformed(ActionEvent evt) {
        boton0.setEnabled(true);
        boton1.setEnabled(true);
        boton2.setEnabled(true);
        boton3.setEnabled(true);
        boton4.setEnabled(true);
        boton5.setEnabled(true);
        boton6.setEnabled(true);
        boton7.setEnabled(true);
        boton8.setEnabled(true);
        boton9.setEnabled(true);
        botonA.setEnabled(true);
        botonB.setEnabled(true);
        botonC.setEnabled(true);
        botonD.setEnabled(true);
        botonE.setEnabled(true);
        botonF.setEnabled(true);
        base = 16;
    }

    /**
     * Configura para base decimal.
     * 
     * @param evt
     */
    protected void decimalActionPerformed(ActionEvent evt) {
        boton0.setEnabled(true);
        boton1.setEnabled(true);
        boton2.setEnabled(true);
        boton3.setEnabled(true);
        boton4.setEnabled(true);
        boton5.setEnabled(true);
        boton6.setEnabled(true);
        boton7.setEnabled(true);
        boton8.setEnabled(true);
        boton9.setEnabled(true);
        botonA.setEnabled(false);
        botonB.setEnabled(false);
        botonC.setEnabled(false);
        botonD.setEnabled(false);
        botonE.setEnabled(false);
        botonF.setEnabled(false);
        base = 10;
    }

    /**
     * Configura par base octal.
     * 
     * @param evt
     */
    protected void octalActionPerformed(ActionEvent evt) {
        boton0.setEnabled(true);
        boton1.setEnabled(true);
        boton2.setEnabled(true);
        boton3.setEnabled(true);
        boton4.setEnabled(true);
        boton5.setEnabled(true);
        boton6.setEnabled(true);
        boton7.setEnabled(true);
        boton8.setEnabled(false);
        boton9.setEnabled(false);
        botonA.setEnabled(false);
        botonB.setEnabled(false);
        botonC.setEnabled(false);
        botonD.setEnabled(false);
        botonE.setEnabled(false);
        botonF.setEnabled(false);
        base = 8;
    }

    /**
     * Configura para base binaria.
     * 
     * @param evt
     */
    protected void binarioActionPerformed(ActionEvent evt) {
        boton0.setEnabled(true);
        boton1.setEnabled(true);
        boton2.setEnabled(false);
        boton3.setEnabled(false);
        boton4.setEnabled(false);
        boton5.setEnabled(false);
        boton6.setEnabled(false);
        boton7.setEnabled(false);
        boton8.setEnabled(false);
        boton9.setEnabled(false);
        botonA.setEnabled(false);
        botonB.setEnabled(false);
        botonC.setEnabled(false);
        botonD.setEnabled(false);
        botonE.setEnabled(false);
        botonF.setEnabled(false);
        base = 2;
    }

    protected void botonSumarActionPerformed(ActionEvent evt) {
        operacion("+");
    }

    protected void botonIgualActionPerformed(ActionEvent evt) {
        operacion("=");
    }

    protected void boton0ActionPerformed(ActionEvent evt) {
        operacion("0");
    }

    protected void botonPuntoActionPerformed(ActionEvent evt) {
        operacion(".");
    }

    protected void botonCONActionPerformed(ActionEvent evt) {
        convertir(pantalla.getText(), false);
    }

    protected void botonDELActionPerformed(ActionEvent evt) {
        borrar();
    }

    protected void botonRestarActionPerformed(ActionEvent evt) {
        operacion("-");
    }

    protected void boton3ActionPerformed(ActionEvent evt) {
        operacion("3");
    }

    protected void boton2ActionPerformed(ActionEvent evt) {
        operacion("2");
    }

    protected void boton1ActionPerformed(ActionEvent evt) {
        operacion("1");
    }

    protected void botonFActionPerformed(ActionEvent evt) {
        operacion("F");
    }

    protected void botonEActionPerformed(ActionEvent evt) {
        operacion("E");
    }

    protected void botonMultiplicarActionPerformed(ActionEvent evt) {
        operacion("x");
    }

    protected void boton6ActionPerformed(ActionEvent evt) {
        operacion("6");
    }

    protected void boton5ActionPerformed(ActionEvent evt) {
        operacion("5");
    }

    protected void boton4ActionPerformed(ActionEvent evt) {
        operacion("4");
    }

    protected void botonDActionPerformed(ActionEvent evt) {
        operacion("D");
    }

    protected void botonCActionPerformed(ActionEvent evt) {
        operacion("C");
    }

    protected void botonDividirActionPerformed(ActionEvent evt) {
        operacion("/");
    }

    protected void boton9ActionPerformed(ActionEvent evt) {
        operacion("9");
    }

    protected void boton8ActionPerformed(ActionEvent evt) {
        operacion("8");
    }

    protected void boton7ActionPerformed(ActionEvent evt) {
        operacion("7");
    }

    protected void botonBActionPerformed(ActionEvent evt) {
        operacion("B");
    }

    protected void botonAActionPerformed(ActionEvent evt) {
        operacion("A");
    }

    protected void opSalirActionPerformed(ActionEvent evt) {
        System.exit(0);
    }

    /**
     * Configura para la opciÃ³n de programaciÃ³n.
     * 
     * @param evt
     */
    private void opProgramacionActionPerformed(ActionEvent evt) {
        botonA.setEnabled(true);
        botonB.setEnabled(true);
        botonC.setEnabled(true);
        botonD.setEnabled(true);
        botonE.setEnabled(true);
        botonF.setEnabled(true);
        botonCON.setEnabled(true);
        panelBases.setVisible(true);
        this.setTitle("Calculadora ProgramaciÃ³n");
        hexadecimalActionPerformed(null);
        hexadecimal.setSelected(true);
    }

    /**
     * Configura para la opciÃ³n bÃ¡sica.
     * 
     * @param evt
     */
    private void opBasicaActionPerformed(ActionEvent evt) {
        botonA.setEnabled(false);
        botonB.setEnabled(false);
        botonC.setEnabled(false);
        botonD.setEnabled(false);
        botonE.setEnabled(false);
        botonF.setEnabled(false);
        botonCON.setEnabled(false);
        panelBases.setVisible(false);
        this.setTitle("Calculadora BÃ¡sica");
        decimalActionPerformed(null);
    }

    /**
     * Asigna los valores de las teclas y conforma las operaciones.
     * 
     * @param tecla La tecla de la calculadora.
     */
    private void operacion(String tecla) {

        switch (tecla) {
            case "+":
                operacion = "+";
                break;
            case "-":
                operacion = "-";
                break;
            case "x":
                operacion = "x";
                break;
            case "/":
                operacion = "/";
                break;
            case "=":
                muestraResultado();
                break;
            default:
                if (validar(tecla)) {
                    if (operacion == "") {
                        valorPrevio += tecla;
                        pantalla.setText(valorPrevio);
                    } else {
                        valorNuevo += tecla;
                        pantalla.setText(valorNuevo);
                    }
                }
                break;
        }

    }

    /**
     * Valida las entradas de usuario.
     * 
     * @param tecla La entrada de usuario a validar.
     * @return Retorna true sÃ­ supera la validaciÃ³n, contrario false.
     */
    private boolean validar(String tecla) {
        String[] entradasValidas;
        String[] entradasBinarias = { "0", "1" };
        String[] entradasOctales = { "0", "1", "2", "3", "4", "5", "6", "7" };
        String[] entradasDecimales = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" };
        String[] entradasHexadecimales = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E",
                "F" };

        if (base == 2) {
            entradasValidas = entradasBinarias;
        } else if (base == 8) {
            entradasValidas = entradasOctales;
        } else if (base == 10) {
            entradasValidas = entradasDecimales;
        } else if (base == 16) {
            entradasValidas = entradasHexadecimales;
        } else {
            entradasValidas = entradasDecimales;
        }

        for (String entrada : entradasValidas) {
            if (entrada == tecla) {
                return true;
            }
        }
        return false;
    }

    /**
     * Realiza las operaciones en distintas bases y muestra el resultado en la
     * pantalla.
     */
    private void muestraResultado() {
        if (valorPrevio != "" && operacion != "") {
            int operando1 = Integer.parseInt(valorPrevio, base);
            int operando2 = Integer.parseInt(valorNuevo, base);
            String resultado = "";
            switch (operacion) {
                case "+":
                    resultado = String.valueOf(operando1 + operando2);
                    break;
                case "-":
                    resultado = String.valueOf(operando1 - operando2);
                    break;
                case "x":
                    resultado = String.valueOf(operando1 * operando2);
                    break;
                case "/":
                    resultado = String.valueOf(operando1 / operando2);
                    break;
                default:
                    resultado = valorNuevo;
                    break;
            }

            convertir(resultado, true);
            valorPrevio = pantalla.getText();
            valorNuevo = "";
        }
    }

    /**
     * Limpia la pantalla y reinicia las operaciones.
     */
    public void borrar() {
        pantalla.setText("");
        valorPrevio = "";
        valorNuevo = "";
        operacion = "";
    }

    /**
     * Convierte cadenas de texto nÃºmericas a diferentes bases.
     * 
     * @param valor        El valor a convertir.
     * @param desdeDecimal SÃ­ viene de base decimal.
     */
    public void convertir(String valor, boolean desdeDecimal) {
        if (desdeDecimal) {
            basePrevia = 10;
        }
        int numero = Integer.parseInt(valor, basePrevia);

        if (binario.isSelected()) {
            pantalla.setText(Integer.toBinaryString(numero));
            basePrevia = 2;
        } else if (octal.isSelected()) {
            pantalla.setText(Integer.toOctalString(numero));
            basePrevia = 8;
        } else if (decimal.isSelected()) {
            pantalla.setText(String.valueOf(numero));
            basePrevia = 10;
        } else if (hexadecimal.isSelected()) {
            pantalla.setText(Integer.toHexString(numero));
            basePrevia = 16;
        }
    }

    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (info.getName().equals("Nimbus")) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }

        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Calculadora().setVisible(true);
        });
    }

    @Override
    public Dimension getPreferredSize() {
        return new Dimension(400, 300);
    }

    // Variables declaration - do not modify
    // GEN-BEGIN:variables
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JMenu menuOpciones;
    private javax.swing.JMenu menuSalir;
    private javax.swing.JMenuItem opBasica;
    private javax.swing.JMenuItem opProgramacion;
    private javax.swing.JMenuItem opSalir;
    private javax.swing.JTextField pantalla;
    private javax.swing.ButtonGroup grupoBases;
    private javax.swing.JPanel panelBases;
    private javax.swing.JPanel panelTeclas;
    private javax.swing.JRadioButton binario;
    private javax.swing.JRadioButton octal;
    private javax.swing.JRadioButton decimal;
    private javax.swing.JRadioButton hexadecimal;
    private javax.swing.JButton boton0;
    private javax.swing.JButton boton1;
    private javax.swing.JButton boton2;
    private javax.swing.JButton boton3;
    private javax.swing.JButton boton4;
    private javax.swing.JButton boton5;
    private javax.swing.JButton boton6;
    private javax.swing.JButton boton7;
    private javax.swing.JButton boton8;
    private javax.swing.JButton boton9;
    private javax.swing.JButton botonA;
    private javax.swing.JButton botonB;
    private javax.swing.JButton botonC;
    private javax.swing.JButton botonD;
    private javax.swing.JButton botonE;
    private javax.swing.JButton botonF;
    private javax.swing.JButton botonSumar;
    private javax.swing.JButton botonRestar;
    private javax.swing.JButton botonMultiplicar;
    private javax.swing.JButton botonDividir;
    private javax.swing.JButton botonIgual;
    private javax.swing.JButton botonCON;
    private javax.swing.JButton botonDEL;
    private javax.swing.JButton botonPunto;
    // End of variables declaration//GEN-END:variables
}